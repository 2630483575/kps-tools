/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as UserManageIndexImport } from './routes/userManage/index'
import { Route as PreviewIndexImport } from './routes/preview/index'
import { Route as OperatorUploadIndexImport } from './routes/operatorUpload/index'
import { Route as OperatorMarketIndexImport } from './routes/operatorMarket/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as DataDownloadIndexImport } from './routes/dataDownload/index'
import { Route as ConfigManageIndexImport } from './routes/configManage/index'
import { Route as DataUploadLayoutImport } from './routes/dataUpload/_layout'
import { Route as DataUploadLayoutIndexImport } from './routes/dataUpload/_layout/index'
import { Route as DataUploadLayoutMinioImport } from './routes/dataUpload/_layout/minio'
import { Route as DataDownloadIdLayoutImport } from './routes/dataDownload/$id/_layout'
import { Route as DataDownloadIdLayoutNameLayoutImport } from './routes/dataDownload/$id/_layout/$name/_layout'
import { Route as DataDownloadIdLayoutNameLayoutBucketDataIndexImport } from './routes/dataDownload/$id/_layout/$name/_layout/bucketData/index'

// Create Virtual Routes

const DataUploadImport = createFileRoute('/dataUpload')()
const DataDownloadIdImport = createFileRoute('/dataDownload/$id')()
const DataDownloadIdLayoutNameImport = createFileRoute(
  '/dataDownload/$id/_layout/$name',
)()

// Create/Update Routes

const DataUploadRoute = DataUploadImport.update({
  id: '/dataUpload',
  path: '/dataUpload',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DataDownloadIdRoute = DataDownloadIdImport.update({
  id: '/dataDownload/$id',
  path: '/dataDownload/$id',
  getParentRoute: () => rootRoute,
} as any)

const UserManageIndexRoute = UserManageIndexImport.update({
  id: '/userManage/',
  path: '/userManage/',
  getParentRoute: () => rootRoute,
} as any)

const PreviewIndexRoute = PreviewIndexImport.update({
  id: '/preview/',
  path: '/preview/',
  getParentRoute: () => rootRoute,
} as any)

const OperatorUploadIndexRoute = OperatorUploadIndexImport.update({
  id: '/operatorUpload/',
  path: '/operatorUpload/',
  getParentRoute: () => rootRoute,
} as any)

const OperatorMarketIndexRoute = OperatorMarketIndexImport.update({
  id: '/operatorMarket/',
  path: '/operatorMarket/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const DataDownloadIndexRoute = DataDownloadIndexImport.update({
  id: '/dataDownload/',
  path: '/dataDownload/',
  getParentRoute: () => rootRoute,
} as any)

const ConfigManageIndexRoute = ConfigManageIndexImport.update({
  id: '/configManage/',
  path: '/configManage/',
  getParentRoute: () => rootRoute,
} as any)

const DataUploadLayoutRoute = DataUploadLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DataUploadRoute,
} as any)

const DataUploadLayoutIndexRoute = DataUploadLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataUploadLayoutRoute,
} as any)

const DataUploadLayoutMinioRoute = DataUploadLayoutMinioImport.update({
  id: '/minio',
  path: '/minio',
  getParentRoute: () => DataUploadLayoutRoute,
} as any)

const DataDownloadIdLayoutRoute = DataDownloadIdLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DataDownloadIdRoute,
} as any)

const DataDownloadIdLayoutNameRoute = DataDownloadIdLayoutNameImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => DataDownloadIdLayoutRoute,
} as any)

const DataDownloadIdLayoutNameLayoutRoute =
  DataDownloadIdLayoutNameLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => DataDownloadIdLayoutNameRoute,
  } as any)

const DataDownloadIdLayoutNameLayoutBucketDataIndexRoute =
  DataDownloadIdLayoutNameLayoutBucketDataIndexImport.update({
    id: '/bucketData/',
    path: '/bucketData/',
    getParentRoute: () => DataDownloadIdLayoutNameLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/dataUpload': {
      id: '/dataUpload'
      path: '/dataUpload'
      fullPath: '/dataUpload'
      preLoaderRoute: typeof DataUploadImport
      parentRoute: typeof rootRoute
    }
    '/dataUpload/_layout': {
      id: '/dataUpload/_layout'
      path: '/dataUpload'
      fullPath: '/dataUpload'
      preLoaderRoute: typeof DataUploadLayoutImport
      parentRoute: typeof DataUploadRoute
    }
    '/configManage/': {
      id: '/configManage/'
      path: '/configManage'
      fullPath: '/configManage'
      preLoaderRoute: typeof ConfigManageIndexImport
      parentRoute: typeof rootRoute
    }
    '/dataDownload/': {
      id: '/dataDownload/'
      path: '/dataDownload'
      fullPath: '/dataDownload'
      preLoaderRoute: typeof DataDownloadIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/operatorMarket/': {
      id: '/operatorMarket/'
      path: '/operatorMarket'
      fullPath: '/operatorMarket'
      preLoaderRoute: typeof OperatorMarketIndexImport
      parentRoute: typeof rootRoute
    }
    '/operatorUpload/': {
      id: '/operatorUpload/'
      path: '/operatorUpload'
      fullPath: '/operatorUpload'
      preLoaderRoute: typeof OperatorUploadIndexImport
      parentRoute: typeof rootRoute
    }
    '/preview/': {
      id: '/preview/'
      path: '/preview'
      fullPath: '/preview'
      preLoaderRoute: typeof PreviewIndexImport
      parentRoute: typeof rootRoute
    }
    '/userManage/': {
      id: '/userManage/'
      path: '/userManage'
      fullPath: '/userManage'
      preLoaderRoute: typeof UserManageIndexImport
      parentRoute: typeof rootRoute
    }
    '/dataDownload/$id': {
      id: '/dataDownload/$id'
      path: '/dataDownload/$id'
      fullPath: '/dataDownload/$id'
      preLoaderRoute: typeof DataDownloadIdImport
      parentRoute: typeof rootRoute
    }
    '/dataDownload/$id/_layout': {
      id: '/dataDownload/$id/_layout'
      path: '/dataDownload/$id'
      fullPath: '/dataDownload/$id'
      preLoaderRoute: typeof DataDownloadIdLayoutImport
      parentRoute: typeof DataDownloadIdRoute
    }
    '/dataUpload/_layout/minio': {
      id: '/dataUpload/_layout/minio'
      path: '/minio'
      fullPath: '/dataUpload/minio'
      preLoaderRoute: typeof DataUploadLayoutMinioImport
      parentRoute: typeof DataUploadLayoutImport
    }
    '/dataUpload/_layout/': {
      id: '/dataUpload/_layout/'
      path: '/'
      fullPath: '/dataUpload/'
      preLoaderRoute: typeof DataUploadLayoutIndexImport
      parentRoute: typeof DataUploadLayoutImport
    }
    '/dataDownload/$id/_layout/$name': {
      id: '/dataDownload/$id/_layout/$name'
      path: '/$name'
      fullPath: '/dataDownload/$id/$name'
      preLoaderRoute: typeof DataDownloadIdLayoutNameImport
      parentRoute: typeof DataDownloadIdLayoutImport
    }
    '/dataDownload/$id/_layout/$name/_layout': {
      id: '/dataDownload/$id/_layout/$name/_layout'
      path: '/$name'
      fullPath: '/dataDownload/$id/$name'
      preLoaderRoute: typeof DataDownloadIdLayoutNameLayoutImport
      parentRoute: typeof DataDownloadIdLayoutNameRoute
    }
    '/dataDownload/$id/_layout/$name/_layout/bucketData/': {
      id: '/dataDownload/$id/_layout/$name/_layout/bucketData/'
      path: '/bucketData'
      fullPath: '/dataDownload/$id/$name/bucketData'
      preLoaderRoute: typeof DataDownloadIdLayoutNameLayoutBucketDataIndexImport
      parentRoute: typeof DataDownloadIdLayoutNameLayoutImport
    }
  }
}

// Create and export the route tree

interface DataUploadLayoutRouteChildren {
  DataUploadLayoutMinioRoute: typeof DataUploadLayoutMinioRoute
  DataUploadLayoutIndexRoute: typeof DataUploadLayoutIndexRoute
}

const DataUploadLayoutRouteChildren: DataUploadLayoutRouteChildren = {
  DataUploadLayoutMinioRoute: DataUploadLayoutMinioRoute,
  DataUploadLayoutIndexRoute: DataUploadLayoutIndexRoute,
}

const DataUploadLayoutRouteWithChildren =
  DataUploadLayoutRoute._addFileChildren(DataUploadLayoutRouteChildren)

interface DataUploadRouteChildren {
  DataUploadLayoutRoute: typeof DataUploadLayoutRouteWithChildren
}

const DataUploadRouteChildren: DataUploadRouteChildren = {
  DataUploadLayoutRoute: DataUploadLayoutRouteWithChildren,
}

const DataUploadRouteWithChildren = DataUploadRoute._addFileChildren(
  DataUploadRouteChildren,
)

interface DataDownloadIdLayoutNameLayoutRouteChildren {
  DataDownloadIdLayoutNameLayoutBucketDataIndexRoute: typeof DataDownloadIdLayoutNameLayoutBucketDataIndexRoute
}

const DataDownloadIdLayoutNameLayoutRouteChildren: DataDownloadIdLayoutNameLayoutRouteChildren =
  {
    DataDownloadIdLayoutNameLayoutBucketDataIndexRoute:
      DataDownloadIdLayoutNameLayoutBucketDataIndexRoute,
  }

const DataDownloadIdLayoutNameLayoutRouteWithChildren =
  DataDownloadIdLayoutNameLayoutRoute._addFileChildren(
    DataDownloadIdLayoutNameLayoutRouteChildren,
  )

interface DataDownloadIdLayoutNameRouteChildren {
  DataDownloadIdLayoutNameLayoutRoute: typeof DataDownloadIdLayoutNameLayoutRouteWithChildren
}

const DataDownloadIdLayoutNameRouteChildren: DataDownloadIdLayoutNameRouteChildren =
  {
    DataDownloadIdLayoutNameLayoutRoute:
      DataDownloadIdLayoutNameLayoutRouteWithChildren,
  }

const DataDownloadIdLayoutNameRouteWithChildren =
  DataDownloadIdLayoutNameRoute._addFileChildren(
    DataDownloadIdLayoutNameRouteChildren,
  )

interface DataDownloadIdLayoutRouteChildren {
  DataDownloadIdLayoutNameRoute: typeof DataDownloadIdLayoutNameRouteWithChildren
}

const DataDownloadIdLayoutRouteChildren: DataDownloadIdLayoutRouteChildren = {
  DataDownloadIdLayoutNameRoute: DataDownloadIdLayoutNameRouteWithChildren,
}

const DataDownloadIdLayoutRouteWithChildren =
  DataDownloadIdLayoutRoute._addFileChildren(DataDownloadIdLayoutRouteChildren)

interface DataDownloadIdRouteChildren {
  DataDownloadIdLayoutRoute: typeof DataDownloadIdLayoutRouteWithChildren
}

const DataDownloadIdRouteChildren: DataDownloadIdRouteChildren = {
  DataDownloadIdLayoutRoute: DataDownloadIdLayoutRouteWithChildren,
}

const DataDownloadIdRouteWithChildren = DataDownloadIdRoute._addFileChildren(
  DataDownloadIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dataUpload': typeof DataUploadLayoutRouteWithChildren
  '/configManage': typeof ConfigManageIndexRoute
  '/dataDownload': typeof DataDownloadIndexRoute
  '/login': typeof LoginIndexRoute
  '/operatorMarket': typeof OperatorMarketIndexRoute
  '/operatorUpload': typeof OperatorUploadIndexRoute
  '/preview': typeof PreviewIndexRoute
  '/userManage': typeof UserManageIndexRoute
  '/dataDownload/$id': typeof DataDownloadIdLayoutRouteWithChildren
  '/dataUpload/minio': typeof DataUploadLayoutMinioRoute
  '/dataUpload/': typeof DataUploadLayoutIndexRoute
  '/dataDownload/$id/$name': typeof DataDownloadIdLayoutNameLayoutRouteWithChildren
  '/dataDownload/$id/$name/bucketData': typeof DataDownloadIdLayoutNameLayoutBucketDataIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dataUpload': typeof DataUploadLayoutIndexRoute
  '/configManage': typeof ConfigManageIndexRoute
  '/dataDownload': typeof DataDownloadIndexRoute
  '/login': typeof LoginIndexRoute
  '/operatorMarket': typeof OperatorMarketIndexRoute
  '/operatorUpload': typeof OperatorUploadIndexRoute
  '/preview': typeof PreviewIndexRoute
  '/userManage': typeof UserManageIndexRoute
  '/dataDownload/$id': typeof DataDownloadIdLayoutRouteWithChildren
  '/dataUpload/minio': typeof DataUploadLayoutMinioRoute
  '/dataDownload/$id/$name': typeof DataDownloadIdLayoutNameLayoutRouteWithChildren
  '/dataDownload/$id/$name/bucketData': typeof DataDownloadIdLayoutNameLayoutBucketDataIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dataUpload': typeof DataUploadRouteWithChildren
  '/dataUpload/_layout': typeof DataUploadLayoutRouteWithChildren
  '/configManage/': typeof ConfigManageIndexRoute
  '/dataDownload/': typeof DataDownloadIndexRoute
  '/login/': typeof LoginIndexRoute
  '/operatorMarket/': typeof OperatorMarketIndexRoute
  '/operatorUpload/': typeof OperatorUploadIndexRoute
  '/preview/': typeof PreviewIndexRoute
  '/userManage/': typeof UserManageIndexRoute
  '/dataDownload/$id': typeof DataDownloadIdRouteWithChildren
  '/dataDownload/$id/_layout': typeof DataDownloadIdLayoutRouteWithChildren
  '/dataUpload/_layout/minio': typeof DataUploadLayoutMinioRoute
  '/dataUpload/_layout/': typeof DataUploadLayoutIndexRoute
  '/dataDownload/$id/_layout/$name': typeof DataDownloadIdLayoutNameRouteWithChildren
  '/dataDownload/$id/_layout/$name/_layout': typeof DataDownloadIdLayoutNameLayoutRouteWithChildren
  '/dataDownload/$id/_layout/$name/_layout/bucketData/': typeof DataDownloadIdLayoutNameLayoutBucketDataIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/dataUpload'
    | '/configManage'
    | '/dataDownload'
    | '/login'
    | '/operatorMarket'
    | '/operatorUpload'
    | '/preview'
    | '/userManage'
    | '/dataDownload/$id'
    | '/dataUpload/minio'
    | '/dataUpload/'
    | '/dataDownload/$id/$name'
    | '/dataDownload/$id/$name/bucketData'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/dataUpload'
    | '/configManage'
    | '/dataDownload'
    | '/login'
    | '/operatorMarket'
    | '/operatorUpload'
    | '/preview'
    | '/userManage'
    | '/dataDownload/$id'
    | '/dataUpload/minio'
    | '/dataDownload/$id/$name'
    | '/dataDownload/$id/$name/bucketData'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/dataUpload'
    | '/dataUpload/_layout'
    | '/configManage/'
    | '/dataDownload/'
    | '/login/'
    | '/operatorMarket/'
    | '/operatorUpload/'
    | '/preview/'
    | '/userManage/'
    | '/dataDownload/$id'
    | '/dataDownload/$id/_layout'
    | '/dataUpload/_layout/minio'
    | '/dataUpload/_layout/'
    | '/dataDownload/$id/_layout/$name'
    | '/dataDownload/$id/_layout/$name/_layout'
    | '/dataDownload/$id/_layout/$name/_layout/bucketData/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DataUploadRoute: typeof DataUploadRouteWithChildren
  ConfigManageIndexRoute: typeof ConfigManageIndexRoute
  DataDownloadIndexRoute: typeof DataDownloadIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  OperatorMarketIndexRoute: typeof OperatorMarketIndexRoute
  OperatorUploadIndexRoute: typeof OperatorUploadIndexRoute
  PreviewIndexRoute: typeof PreviewIndexRoute
  UserManageIndexRoute: typeof UserManageIndexRoute
  DataDownloadIdRoute: typeof DataDownloadIdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DataUploadRoute: DataUploadRouteWithChildren,
  ConfigManageIndexRoute: ConfigManageIndexRoute,
  DataDownloadIndexRoute: DataDownloadIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  OperatorMarketIndexRoute: OperatorMarketIndexRoute,
  OperatorUploadIndexRoute: OperatorUploadIndexRoute,
  PreviewIndexRoute: PreviewIndexRoute,
  UserManageIndexRoute: UserManageIndexRoute,
  DataDownloadIdRoute: DataDownloadIdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/dataUpload",
        "/configManage/",
        "/dataDownload/",
        "/login/",
        "/operatorMarket/",
        "/operatorUpload/",
        "/preview/",
        "/userManage/",
        "/dataDownload/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/dataUpload": {
      "filePath": "dataUpload",
      "children": [
        "/dataUpload/_layout"
      ]
    },
    "/dataUpload/_layout": {
      "filePath": "dataUpload/_layout.tsx",
      "parent": "/dataUpload",
      "children": [
        "/dataUpload/_layout/minio",
        "/dataUpload/_layout/"
      ]
    },
    "/configManage/": {
      "filePath": "configManage/index.tsx"
    },
    "/dataDownload/": {
      "filePath": "dataDownload/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/operatorMarket/": {
      "filePath": "operatorMarket/index.tsx"
    },
    "/operatorUpload/": {
      "filePath": "operatorUpload/index.tsx"
    },
    "/preview/": {
      "filePath": "preview/index.tsx"
    },
    "/userManage/": {
      "filePath": "userManage/index.tsx"
    },
    "/dataDownload/$id": {
      "filePath": "dataDownload/$id",
      "children": [
        "/dataDownload/$id/_layout"
      ]
    },
    "/dataDownload/$id/_layout": {
      "filePath": "dataDownload/$id/_layout.tsx",
      "parent": "/dataDownload/$id",
      "children": [
        "/dataDownload/$id/_layout/$name"
      ]
    },
    "/dataUpload/_layout/minio": {
      "filePath": "dataUpload/_layout/minio.tsx",
      "parent": "/dataUpload/_layout"
    },
    "/dataUpload/_layout/": {
      "filePath": "dataUpload/_layout/index.tsx",
      "parent": "/dataUpload/_layout"
    },
    "/dataDownload/$id/_layout/$name": {
      "filePath": "dataDownload/$id/_layout/$name",
      "parent": "/dataDownload/$id/_layout",
      "children": [
        "/dataDownload/$id/_layout/$name/_layout"
      ]
    },
    "/dataDownload/$id/_layout/$name/_layout": {
      "filePath": "dataDownload/$id/_layout/$name/_layout.tsx",
      "parent": "/dataDownload/$id/_layout/$name",
      "children": [
        "/dataDownload/$id/_layout/$name/_layout/bucketData/"
      ]
    },
    "/dataDownload/$id/_layout/$name/_layout/bucketData/": {
      "filePath": "dataDownload/$id/_layout/$name/_layout/bucketData/index.tsx",
      "parent": "/dataDownload/$id/_layout/$name/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
